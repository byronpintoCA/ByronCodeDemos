using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MiscHelper;
using System.Text;

namespace MiscHelperTest
{
    [TestClass]
    public class UTAESEncryption
    {
        [TestMethod]
        public void CreateKey()
        {
            var ret =AESEncryption.CreateKey();
            Assert.IsTrue(ret.Length == 32 && ret[0] > 0 && ret[31] > 0);

            var retString = AESEncryption.CreateKeyString();
            Assert.IsTrue(ret.Length == 32);
        }

        [TestMethod]
        public void EncryptDecryptAutoGeneratedKey()
        {
            String ToEncrypt = "What the hell is this";
            var key = AESEncryption.CreateKey();
            String encrypted =AESEncryption.EncryptToString( ToEncrypt,key,out byte [] IV);

            String decrypted = AESEncryption.Decrypt(key, IV, encrypted);

            Assert.IsTrue(decrypted == ToEncrypt);
        }

        [TestMethod]
        public void EncryptDecryptWithKnownKey()
        {
            String Key = "1234567890123456";  // minimum 16 characters
            String ToEncrypt = "What the hell is this";
            var key = Encoding.UTF8.GetBytes(Key);
            String encrypted = AESEncryption.EncryptToString(ToEncrypt, key, out byte[] IV);

            String decrypted = AESEncryption.Decrypt(key, IV, encrypted);

            Assert.IsTrue(decrypted == ToEncrypt);
        }
    }
}
